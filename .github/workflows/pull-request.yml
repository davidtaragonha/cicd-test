# TODO pending to improve the cache for dependencies
name: Pull request workflow
on:
  pull_request:
    branches:
      - main
jobs:
# Compile the project
  Compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./.mvn/wrapper/maven-wrapper.jar
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '**/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Compile with Maven
        run: make build.compile
# Scan vulnerabilities in the third party dependencies
  Maven-Dependencies-Review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v1
# Scan code
  Code-Review:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
# Scan k8s manifests
  K8s-Manifest-Review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: kube-score check
        uses: piraces/kube-score-ga@v0.1.2
        with:
          manifests-folders: './k8s/*.yml'
      - name: LS files
        run: |
          ls -lisa
# Execute the unit tests of the project
  Unit-Tests:
    runs-on: ubuntu-latest
    needs: [Compile, Maven-Dependencies-Review, Code-Review]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./.mvn/wrapper/maven-wrapper.jar
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '**/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Execute UTs Maven
        run: make test.ut
      - name: Create Unit tests Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit tests Report
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
# Execute the integration tests of the project
  Integration-Tests:
    runs-on: ubuntu-latest
    needs: [Compile, Maven-Dependencies-Review, Code-Review]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./.mvn/wrapper/maven-wrapper.jar
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '**/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Execute ITs Maven
        run: make test.it
      - name: Create Integration tests Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Integration tests Report
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
# Execute the acceptance tests of the project
  Acceptance-Tests:
    runs-on: ubuntu-latest
    needs: [Compile, Maven-Dependencies-Review, Code-Review]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./.mvn/wrapper/maven-wrapper.jar
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '**/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Execute ATs Maven
        run: make test.at
      - name: Create Acceptance tests Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Acceptance tests Report
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
# Create the artifacts of the project: jar, container... and deploy them
  Package-Deploy:
    runs-on: ubuntu-latest
    needs: [Compile, Maven-Dependencies-Review, Code-Review]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./.mvn/wrapper/maven-wrapper.jar
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '**/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Package with Maven
        run: make build.package
      - uses: anchore/scan-action@v3
        id: scan
        with:
          image: davidtaragonha/cicd-test:latest
          acs-report-enable: true
          fail-build: false
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}